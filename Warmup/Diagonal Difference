# TASK :

# Given a square matrix, calculate the absolute difference between the sums of its diagonals.
# For example, the square matrix arr is shown below:

                                  1 2 3
                                  4 5 6
                                  9 8 9  

# The left-to-right diagonal = 1 + 5 + 9 = 15. The right to left diagonal = 3 + 5 + 9 = 17. Their absolute difference is |15-17| = 12.

# Function description
# Complete the diagonaldifference function in the editor below.

# diagonalDifference takes the following parameter:
           int arr[n][m]: an array of integers

#Return
# int: the absolute diagonal difference


import math
import os
import random
import re
import sys

#
# Complete the 'diagonalDifference' function below.
#
# The function is expected to return an INTEGER.
# The function accepts 2D_INTEGER_ARRAY arr as parameter.
#

def diagonalDifference(arr):
    d1 = sum([arr[x][x] for x in range(n)]) 
    d2 = sum([arr[x][n-1-x] for x in range (n)])
    return abs(d1-d2)
    # Write your code here

if __name__ == '__main__':
    fptr = open(os.environ['OUTPUT_PATH'], 'w')

    n = int(input().strip())

    arr = []

    for _ in range(n):
        arr.append(list(map(int, input().rstrip().split())))

    result = diagonalDifference(arr)

    fptr.write(str(result) + '\n')

    fptr.close()
